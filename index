export function swap(array, i, minIndex) {
  let temp = array[i];
  array[i] = array[minIndex];
  array[minIndex] = temp;
}



merge_push(state, action) {
      state.barArray = [];
      for (var i = 0; i < action.payload.length; i++) {
        state.barArray.push({
          id: action.payload[i].id,
          number: action.payload[i].number,
          status: action.payload[i].status,
        });
      }
    },
    
    
    function splitArray(array) {
    const arrayLength = array.length;
    if (arrayLength < 2) return array;
    const mid = Math.ceil(arrayLength / 2);
    const arrayLeft = array.slice(0, mid);
    const arrayRight = array.slice(mid, arrayLength);
    const array_l = splitArray(arrayLeft);
    const array_r = splitArray(arrayRight);
    return mergeArray(array_l, array_r);
  }

  function mergeArray(arrayLeft, arrayRight) {
    const newArray = [];

    while (arrayLeft.length && arrayRight.length) {
      if (arrayLeft[0].number < arrayRight[0].number) {
        newArray.push(arrayLeft.shift());
      } else {
        newArray.push(arrayRight.shift());
      }
    }

    while (arrayLeft.length) {
      newArray.push(arrayLeft.shift());
    }

    while (arrayRight.length) {
      newArray.push(arrayRight.shift());
    }

    return newArray;
  }
